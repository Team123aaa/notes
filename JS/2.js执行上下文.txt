1.什么是JS执行上下文？
  执行上下文是JS执行一段代码时的运行环境，比如调用一个函数，就会进入函数的执行上下文，确定该函数在执行期间调用到的this变量对象以及函数等
2.执行上下文的类型
  全局执行上下文：当JS执行全局代码的时候，会编译全局代码并创建全局执行上下文，而且在整个页面的生存周期内，全局执行上下文只有一份；
  函数执行上下文：当调用一个函数的时候，函数体内的代码会被编译，并创建函数执行上下文，一般情况下，函数执行结束之后，创建的函数执行上下文会被销毁；
  Eval函数执行上下文：当使用eval函数的时候，eval的代码也会被编译，并创建执行上下文。
3.执行栈（调用栈）
  栈：就是后进先出
  调用栈就是用来管理函数调用关系的一种数据结构
4.什么是JS的调用栈？
  JS引擎利用栈的这种结构来管理执行上下文，在执行上下文创建好后，JS引擎会将执行上下文压入栈中，通常把这种用来管理执行上下文的栈称为执行上下文，又称为调用栈。
5.栈溢出
  调用栈是一种用来管理执行上下文的数据结构，符合后进先出的规则，但是调用栈是有大小的，当入栈的执行上下文超过一定数目，JS引擎就会报错，我们把这种错误叫做栈溢出，特别是写递归代码的时候很容易出现栈溢出的情况